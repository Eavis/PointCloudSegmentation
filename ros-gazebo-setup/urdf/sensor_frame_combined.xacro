<?xml version='1.0'?>
<robot name="sensor_frame">
  <!--Macro to define a Velodyne sensor, copied from `rospack find velodyne_description`/HDL-32E.urdf.xacro-->
  <xacro:arg name="gpu" default="false"/>
  <xacro:property name="gpu" value="$(arg gpu)" />
  <xacro:property name="M_PI" value="3.1415926535897931" />

  <xacro:macro name="HDL-32E" params="parent:=base_link name:=velodyne topic:=/velodyne_points hz:=10 lasers:=32 samples:=2187 collision_range:=0.3 min_range:=0.9 max_range:=130.0 noise:=0.008 min_angle:=-${M_PI} max_angle:=${M_PI} gpu:=false">
    <xacro:if value="${gpu}">
      <sensor type="gpu_ray" name="${name}-HDL32E">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>${hz}</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>${samples}</samples>
              <resolution>1</resolution>
              <min_angle>${min_angle}</min_angle>
              <max_angle>${max_angle}</max_angle>
            </horizontal>
            <vertical>
              <samples>${lasers}</samples>
              <resolution>1</resolution>
              <min_angle>-${30.67*M_PI/180.0}</min_angle>
              <max_angle> ${10.67*M_PI/180.0}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>${collision_range}</min>
            <max>${max_range+1}</max>
            <resolution>0.001</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.0</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_gpu_laser.so">
          <topicName>${topic}</topicName>
          <frameName>${name}</frameName>
          <min_range>${min_range}</min_range>
          <max_range>${max_range}</max_range>
          <gaussianNoise>${noise}</gaussianNoise>
        </plugin>
      </sensor>
    </xacro:if>
    <xacro:unless value="${gpu}">
      <sensor type="ray" name="${name}-HDL32E">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>${hz}</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>${samples}</samples>
              <resolution>1</resolution>
              <min_angle>${min_angle}</min_angle>
              <max_angle>${max_angle}</max_angle>
            </horizontal>
            <vertical>
              <samples>${lasers}</samples>
              <resolution>1</resolution>
              <min_angle>-${30.67*M_PI/180.0}</min_angle>
              <max_angle> ${10.67*M_PI/180.0}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>${collision_range}</min>
            <max>${max_range+1}</max>
            <resolution>0.001</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.0</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
          <topicName>${topic}</topicName>
          <frameName>${name}</frameName>
          <min_range>${min_range}</min_range>
          <max_range>${max_range}</max_range>
          <gaussianNoise>${noise}</gaussianNoise>
        </plugin>
      </sensor>
    </xacro:unless>
  </xacro:macro>

  <link name='base'>
    <pose>0 0 0 0 0 0</pose>
  </link>

  <link name='camera'>
    <pose>0 0 0 0 0 0</pose>
    <visual name='camera'>
      <geometry>
        <box>
          <size>0.1 0.1 0.1</size>
        </box>
      </geometry>
      <material>
        <ambient>1 1 0 1</ambient>
      </material>
    </visual>
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <visualize>true</visualize>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.2</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </link>

  <link name='velodyne'>
    <pose>-0.05 0 0.15 0 0 0</pose>
    <visual name='velodyne'>
      <geometry>
        <box>
          <size>0.1 0.1 0.1</size>
        </box>
      </geometry>
      <material>
        <ambient>1 0 0 1</ambient>
      </material>
    </visual>
    <HDL-32E parent="base" name="velodyne" topic="/velodyne_points" hz="10" samples="220" gpu="${gpu}"/>
  </link>

  <static>true</static>

</robot>

